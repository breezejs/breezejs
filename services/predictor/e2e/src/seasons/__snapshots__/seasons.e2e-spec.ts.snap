// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Seasons [DELETE] /seasons/:id should delete a season 1`] = `Object {}`;

exports[`Seasons [DELETE] /seasons/:id should return not found if season does not exist 1`] = `
Object {
  "error": "Not Found",
  "statusCode": 404,
}
`;

exports[`Seasons [GET] /seasons with filtering should list first page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "id": "a526739f-15ba-4ee4-b30f-188bd11078ed",
      "name": "2016/17",
    },
    Object {
      "id": "81f81292-1e0c-4f94-94a0-d164466a62c2",
      "name": "2017/18",
    },
    Object {
      "id": "913d0a60-b388-4101-b5cf-95167c4f35cb",
      "name": "2018/19",
    },
    Object {
      "id": "2860e0d0-1ecf-47e3-82ce-0b3400eacd95",
      "name": "2019/20",
    },
    Object {
      "id": "9527f678-47c1-4c14-8de7-4deb26172bde",
      "name": "2020/21",
    },
    Object {
      "id": "4aac4f01-0545-4e32-b2cd-c78e7687239b",
      "name": "2021/22",
    },
    Object {
      "id": "6342404f-08ea-448b-9c1c-8acdcd97acbf",
      "name": "2022/23",
    },
    Object {
      "id": "1d89fd93-85f6-4f79-8d92-01cebedc35fc",
      "name": "2023/24",
    },
    Object {
      "id": "eae9b1f4-bacd-4bff-ade6-5abe2bfa0ffb",
      "name": "2024/25",
    },
    Object {
      "id": "309ef708-50b4-49b6-9689-538aaa9c1218",
      "name": "2025/26",
    },
  ],
  "limit": 10,
  "page": 1,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with filtering should list second page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "id": "048c3964-5290-41da-a531-2d83c95eeb1a",
      "name": "2026/27",
    },
    Object {
      "id": "5419df62-155b-42e2-9514-13ff488e75be",
      "name": "2027/28",
    },
  ],
  "limit": 10,
  "page": 2,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with filtering should return a bad request if filtered field does not exist 1`] = `
Object {
  "error": "Bad Request",
  "message": "club column was not found in the Season entity.",
  "statusCode": 400,
}
`;

exports[`Seasons [GET] /seasons with filtering should return no content if out of bounds 1`] = `Object {}`;

exports[`Seasons [GET] /seasons with limiting should list first page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "048c3964-5290-41da-a531-2d83c95eeb1a",
      "name": "2026/27",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "1d89fd93-85f6-4f79-8d92-01cebedc35fc",
      "name": "2023/24",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "2860e0d0-1ecf-47e3-82ce-0b3400eacd95",
      "name": "2019/20",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "309ef708-50b4-49b6-9689-538aaa9c1218",
      "name": "2025/26",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "4aac4f01-0545-4e32-b2cd-c78e7687239b",
      "name": "2021/22",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 5,
  "page": 1,
  "pages": 3,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with limiting should list second page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "5419df62-155b-42e2-9514-13ff488e75be",
      "name": "2027/28",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "6342404f-08ea-448b-9c1c-8acdcd97acbf",
      "name": "2022/23",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "81f81292-1e0c-4f94-94a0-d164466a62c2",
      "name": "2017/18",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "913d0a60-b388-4101-b5cf-95167c4f35cb",
      "name": "2018/19",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "9527f678-47c1-4c14-8de7-4deb26172bde",
      "name": "2020/21",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 5,
  "page": 2,
  "pages": 3,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with limiting should return no content if out of bounds 1`] = `Object {}`;

exports[`Seasons [GET] /seasons with no filtering or sorting should list first page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "048c3964-5290-41da-a531-2d83c95eeb1a",
      "name": "2026/27",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "1d89fd93-85f6-4f79-8d92-01cebedc35fc",
      "name": "2023/24",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "2860e0d0-1ecf-47e3-82ce-0b3400eacd95",
      "name": "2019/20",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "309ef708-50b4-49b6-9689-538aaa9c1218",
      "name": "2025/26",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "4aac4f01-0545-4e32-b2cd-c78e7687239b",
      "name": "2021/22",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "5419df62-155b-42e2-9514-13ff488e75be",
      "name": "2027/28",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "6342404f-08ea-448b-9c1c-8acdcd97acbf",
      "name": "2022/23",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "81f81292-1e0c-4f94-94a0-d164466a62c2",
      "name": "2017/18",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "913d0a60-b388-4101-b5cf-95167c4f35cb",
      "name": "2018/19",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "9527f678-47c1-4c14-8de7-4deb26172bde",
      "name": "2020/21",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 10,
  "page": 1,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with no filtering or sorting should list second page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "a526739f-15ba-4ee4-b30f-188bd11078ed",
      "name": "2016/17",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "eae9b1f4-bacd-4bff-ade6-5abe2bfa0ffb",
      "name": "2024/25",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 10,
  "page": 2,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with no filtering or sorting should return no content if out of bounds 1`] = `Object {}`;

exports[`Seasons [GET] /seasons with sorting ascending should list first page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "a526739f-15ba-4ee4-b30f-188bd11078ed",
      "name": "2016/17",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "81f81292-1e0c-4f94-94a0-d164466a62c2",
      "name": "2017/18",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "913d0a60-b388-4101-b5cf-95167c4f35cb",
      "name": "2018/19",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "2860e0d0-1ecf-47e3-82ce-0b3400eacd95",
      "name": "2019/20",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "9527f678-47c1-4c14-8de7-4deb26172bde",
      "name": "2020/21",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "4aac4f01-0545-4e32-b2cd-c78e7687239b",
      "name": "2021/22",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "6342404f-08ea-448b-9c1c-8acdcd97acbf",
      "name": "2022/23",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "1d89fd93-85f6-4f79-8d92-01cebedc35fc",
      "name": "2023/24",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "eae9b1f4-bacd-4bff-ade6-5abe2bfa0ffb",
      "name": "2024/25",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "309ef708-50b4-49b6-9689-538aaa9c1218",
      "name": "2025/26",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 10,
  "page": 1,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with sorting ascending should list second page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "048c3964-5290-41da-a531-2d83c95eeb1a",
      "name": "2026/27",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "5419df62-155b-42e2-9514-13ff488e75be",
      "name": "2027/28",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 10,
  "page": 2,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with sorting ascending should return no content if out of bounds 1`] = `Object {}`;

exports[`Seasons [GET] /seasons with sorting descending should list first page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "5419df62-155b-42e2-9514-13ff488e75be",
      "name": "2027/28",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "048c3964-5290-41da-a531-2d83c95eeb1a",
      "name": "2026/27",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "309ef708-50b4-49b6-9689-538aaa9c1218",
      "name": "2025/26",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "eae9b1f4-bacd-4bff-ade6-5abe2bfa0ffb",
      "name": "2024/25",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "1d89fd93-85f6-4f79-8d92-01cebedc35fc",
      "name": "2023/24",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "6342404f-08ea-448b-9c1c-8acdcd97acbf",
      "name": "2022/23",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "4aac4f01-0545-4e32-b2cd-c78e7687239b",
      "name": "2021/22",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "9527f678-47c1-4c14-8de7-4deb26172bde",
      "name": "2020/21",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "2860e0d0-1ecf-47e3-82ce-0b3400eacd95",
      "name": "2019/20",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "913d0a60-b388-4101-b5cf-95167c4f35cb",
      "name": "2018/19",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 10,
  "page": 1,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with sorting descending should list second page of seasons with all values 1`] = `
Object {
  "items": Array [
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "81f81292-1e0c-4f94-94a0-d164466a62c2",
      "name": "2017/18",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
    Object {
      "createdAt": "2018-12-01T00:00:00.000Z",
      "id": "a526739f-15ba-4ee4-b30f-188bd11078ed",
      "name": "2016/17",
      "updatedAt": "2018-12-01T00:00:00.000Z",
    },
  ],
  "limit": 10,
  "page": 2,
  "pages": 2,
  "total": 12,
}
`;

exports[`Seasons [GET] /seasons with sorting descending should return no content if out of bounds 1`] = `Object {}`;

exports[`Seasons [GET] /seasons/:id should return a bad request if filtered field does not exist 1`] = `
Object {
  "error": "Bad Request",
  "message": "club column was not found in the Season entity.",
  "statusCode": 400,
}
`;

exports[`Seasons [GET] /seasons/:id should return a filtered result 1`] = `
Object {
  "name": "2023/24",
}
`;

exports[`Seasons [GET] /seasons/:id should return a season 1`] = `
Object {
  "createdAt": "2018-12-01T00:00:00.000Z",
  "id": "1d89fd93-85f6-4f79-8d92-01cebedc35fc",
  "name": "2023/24",
  "updatedAt": "2018-12-01T00:00:00.000Z",
}
`;

exports[`Seasons [GET] /seasons/:id should return not found if season does not exist 1`] = `
Object {
  "error": "Not Found",
  "statusCode": 404,
}
`;

exports[`Seasons [PATCH] /seasons/:id should return not found if season does not exist 1`] = `
Object {
  "error": "Not Found",
  "statusCode": 404,
}
`;

exports[`Seasons [PATCH] /seasons/:id should throw an error if name is not a string 1`] = `
Array [
  Object {
    "children": Array [],
    "constraints": Object {
      "isString": "name must be a string",
    },
    "property": "name",
    "target": Object {
      "name": 99,
    },
    "value": 99,
  },
]
`;

exports[`Seasons [PATCH] /seasons/:id should throw an error of a season is updated with a duplicate name 1`] = `
Object {
  "error": "Bad Request",
  "message": "ER_DUP_ENTRY: Duplicate entry '2018/19' for key 'IDX_b3e4a42a8be8b449354a8b31cc'",
  "statusCode": 400,
}
`;

exports[`Seasons [PATCH] /seasons/:id should update a season 1`] = `Object {}`;

exports[`Seasons [POST] /seasons should throw an error if a duplicate season is created 1`] = `
Object {
  "error": "Bad Request",
  "message": "ER_DUP_ENTRY: Duplicate entry '2005/06' for key 'IDX_b3e4a42a8be8b449354a8b31cc'",
  "statusCode": 400,
}
`;

exports[`Seasons [POST] /seasons should throw an error if name is not a string 1`] = `
Array [
  Object {
    "children": Array [],
    "constraints": Object {
      "isString": "name must be a string",
    },
    "property": "name",
    "target": Object {
      "name": 99,
    },
    "value": 99,
  },
]
`;
