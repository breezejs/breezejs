version: 2

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/repo

generate_cache_key: &generate_cache_key
  run:
    command: ./scripts/checksum.sh /tmp/checksum.txt
    name: Generate cache key

restore_cache: &restore_cache
  restore_cache:
    keys:
      - breeze-dependencies-v2-{{ checksum "/tmp/checksum.txt" }}
      - breeze-dependencies-v2-

jobs:
  build:
    docker:
      - image: circleci/node:8.10.0
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *generate_cache_key
      - <<: *restore_cache
      - run:
          command: npm i
          name: Install dependencies
      - run:
          command: npm run lint
          name: Lint code
      - run:
          command: npm run build
          name: Build packages
      - save_cache:
          key: breeze-dependencies-v2-{{ checksum "/tmp/checksum.txt" }}
          paths:
            - node_modules
            - packages/article/node_modules
            - packages/bootstrap/node_modules
            - packages/competition/node_modules
            - packages/fixture/node_modules
            - packages/request/node_modules
            - packages/season/node_modules
            - packages/sql/node_modules
            - packages/team/node_modules
            - packages/validator/node_modules
            - services/articles/node_modules
            - services/media/node_modules
            - services/predictor/node_modules
      - persist_to_workspace:
          paths:
            - ./packages/*/lib/*
            - ./services/*/lib/*
          root: .

  unit-test:
    docker:
      - image: breezejs/sonar-scanner:latest
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *generate_cache_key
      - <<: *restore_cache
      - <<: *attach_workspace
      - run:
          command: npm run test
          name: Unit tests
      - run:
          command: sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.branch.name=$CIRCLE_BRANCH
          name: Static code analysis

  integration-test:
    docker:
      - image: circleci/node:8.10.0
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: breeze
          MYSQL_PASSWORD: password
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *generate_cache_key
      - <<: *restore_cache
      - <<: *attach_workspace
      - run:
          command: |
            sudo apt-get update
            sudo apt-get install -y mysql-client
          name: Install MySQL client
      - run:
          command: |
            cat environments/mysql/*-testing.sql | mysql -h 127.0.0.1 -u root -ppassword
          name: Set up database
      - run:
          command: npm run e2e
          name: Integration tests

  generate-docs:
    docker:
      - image: circleci/node:8.10.0
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *generate_cache_key
      - <<: *restore_cache
      - <<: *attach_workspace
      - run:
          command: npm run docs
          name: Generate docs

workflows:
  version: 2

  build-and-test:
    jobs:
      - build
      - unit-test:
          requires:
            - build
      - integration-test:
          requires:
            - build
      - generate-docs:
          requires:
            - unit-test
            - integration-test
